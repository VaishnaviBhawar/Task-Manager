@tailwind base;
@tailwind components;
@tailwind utilities;



/* This is a comment 




import React, { useState } from "react";

const App = () => {
  const [task, setTask] = useState("");
  const [priority, setPriority] = useState("medium");
  const [tasks, setTasks] = useState([]);

  const handleAdd = () => {
    if (task.trim() !== "") {
      setTasks([...tasks, { text: task, priority }]);
      setTask("");
      setPriority("medium");
    }
  };

  const handleDelete = (index) => {
    const updated = tasks.filter((_, i) => i !== index);
    setTasks(updated);
  };

  const getPriorityStyle = (priority) => {
    switch (priority) {
      case "high":
        return "bg-red-100 shadow-lg border-l-4 border-red-500";
      case "medium":
        return "bg-yellow-100 shadow-md border-l-4 border-yellow-400";
      case "low":
        return "bg-green-100 shadow-sm border-l-4 border-green-400";
      default:
        return "bg-gray-100";
    }
  };

  const getEmoji = (priority) => {
    switch (priority) {
      case "high":
        return "🔥 High Priority";
      case "medium":
        return "🌤️ Medium Priority";
      case "low":
        return "🍃 Low Priority";
      default:
        return "";
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-100 to-blue-200 flex items-center justify-center p-4 font-sans">
      <div className="bg-white/80 backdrop-blur-xl rounded-3xl shadow-2xl p-8 w-full max-w-2xl border border-gray-200">
        <h1 className="text-4xl font-bold text-center text-indigo-700 mb-6">🤖 Your Personal Task Assistant</h1>

        <div className="flex flex-col sm:flex-row gap-3 mb-6">
          <input
            type="text"
            placeholder="What do you need to do?"
            value={task}
            onChange={(e) => setTask(e.target.value)}
            className="flex-1 px-4 py-3 rounded-2xl border border-gray-300 shadow-inner focus:outline-none focus:ring-2 focus:ring-indigo-400"
          />

          <select
            value={priority}
            onChange={(e) => setPriority(e.target.value)}
            className="px-4 py-3 rounded-2xl border border-gray-300 shadow-inner focus:outline-none focus:ring-2 focus:ring-indigo-400"
          >
            <option value="high">🔴 High</option>
            <option value="medium">🟡 Medium</option>
            <option value="low">🟢 Low</option>
          </select>

          <button
            onClick={handleAdd}
            className="bg-indigo-500 hover:bg-indigo-600 text-white px-6 py-3 rounded-2xl shadow-lg transition duration-200"
          >
            Add 🪄
          </button>
        </div>

        <div className="space-y-4">
          {tasks.map((taskObj, index) => (
            <div
              key={index}
              className={`flex justify-between items-center p-4 rounded-2xl ${getPriorityStyle(taskObj.priority)} transition duration-300`}
            >
              <div>
                <div className="text-lg font-medium text-gray-800">{taskObj.text}</div>
                <div className="text-sm text-gray-600 italic">{getEmoji(taskObj.priority)}</div>
              </div>
              <button
                onClick={() => handleDelete(index)}
                className="text-red-500 hover:text-red-700 font-bold text-lg transition duration-150"
              >
                ❌
              </button>
            </div>
          ))}
        </div>

        {tasks.length === 0 && (
          <p className="mt-6 text-center text-gray-500 text-sm">
            ✨ No tasks yet — Let's get something done together!
          </p>
        )}
      </div>
    </div>
  );
};

export default App;
*/